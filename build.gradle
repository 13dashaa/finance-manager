plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id "jacoco"
    id "org.sonarqube" version "6.0.1.5171"
}
jacoco {
    toolVersion = "0.8.11"
}
/*
sonar {
    properties {
        property "sonar.projectKey", "13dashaa_finance-manager"
        property "sonar.organization", "13dashaa"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.projectName", "Finance Manager"
        property "sonar.projectVersion", version
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.login", "b1c421278cea345691caba9cc57d5722a03f1d84"
    }
}
*/


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.postgresql:postgresql:42.5.4'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    classDirectories.setFrom(files("build/classes/java/main")) // Путь к скомпилированным классам
    sourceDirectories.setFrom(files("src/main/java"))
    reports {
        xml.required = true
        csv.required = false
    }
}